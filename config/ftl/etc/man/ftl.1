.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "FTL" "1" "" "" "General Commands Manual"
.hy
.SH NAME
.PP
ftl - terminal file manager, hyperorthodox and with live previews
.PP
[IMAGE: Screenshot (https://raw.github.com/nkh/ftl/master/screenshots/ftl.png)]
.PP
[IMAGE: Screenshot (https://raw.github.com/nkh/ftl/master/screenshots/image_preview.png)]
.SH SYNOPSIS
.PP
ftl
.PP
ftl [-t file] [directory[/file]]
.SH OPTIONS
.PP
-t file file contains paths to files to tag eg: ftl -t <(find -name
\[cq]ftl*\[cq])
.SH DESCRIPTION
.PP
ftl is hyperothodox file manager with live previews that leverages tmux
and many other programs.
.PP
The display consists of panes containing files listings and optional
preview.
.PP
\f[I]ftl\f[R] can be used as a directory picker (see cdf in the source)
and as a file picker in \f[I]vim\f[R]
.SH CONCEPTS
.SS Hyperorthodoxy
.PP
ftl is hyperothodox, or not at all depending on your preferences, it
starts with two panes, but can have more, one showing you a directory
listing and the other a preview of the current entry.
The outstanding \f[I]tmux\f[R] makes this possible.
.PP
You can chose to remove the preview as well as having multiple panes
showing the same or different directories.
.PP
Panes are independent instances of ftl that work in synch, each pane has
its own tabs, filters, \&...
.SS Live Previews
.PP
The preview pane is not, generally, a static view of the file but,
thanks to \f[I]tmux\f[R], a running program.
If you are positioned on a text file, \f[I]vim\f[R] will be run to
display it.
If you change the position in the listing pane, the preview program is
killed and a new program is started.
.PP
The idea is to use within \f[I]ftl\f[R] what you normally use on the
command line.
New previews are simple to add.
.SS Extended And Detached Viewers
.PP
For some file types, often media types, \f[I]ftl\f[R] can show an
extended view and even start a detached viewer.
See \f[I]## MEDIA\f[R] below and `$CFG_CFG/etc/ftlrc'.
.SS Vim
.PP
\f[I]ftl\f[R] uses the awesome \f[I]vim\f[R], if it\[cq]s not your
favorite editor you can install it just for previewing (and maybe find
it awesome).
Patches for other editors are welcome.
.SS Tabs
.PP
Tabs are views, to same or different directories, in the same pane.
Filters are per tab so you can have two tabs with different filters.
.SS File Listing
.PP
The directory entries are colored with lscolors.
The header consists of:
.IP
.nf
\f[C]
<directory> [tilde(filter)] <current/total> <tab#> <selected_entries> [file_stat]
\f[R]
.fi
.SS Marks
.PP
You can bookmak locations and jump back to them.
Marks can be set in the configuration file, added for the current
session or made persistent.
.SS Tags/Etags
.PP
You can tag (select) entries, tags are synched between panes when option
\f[I]auto_tag\f[R] is set (set by default).
.PP
Etags is extra information that is optionally prepended to the entries.
.PP
Available etags are:
.IP
.nf
\f[C]
/home/nadim/nadim/devel/repositories/ftl 2/14 \[u237A]
 1  08/11/2022-12:00 ftl
    \[u2BA4]     date     \[u2BA5]

/home/nadim/nadim/devel/repositories/ftl 2/14 \[u237A]
 1  M ftl
 1 ?? tags
   \[u2BA4]\[u2BA5] git-status
\f[R]
.fi
.SS Preview
.PP
If preview is on (on by default), a preview pane is displayed.
It can be switched on and off during the session; it\[cq]s size can be
changed.
Some entry types have multiple previews (IE: directories) that can be
accessed with a keyboard shortcut (Alt-gr+v by default)
.SS Filtering
.PP
\f[I]ftl\f[R] can filter the files in the directory to present only
those you want to see.
.PP
See \f[I]Filtering\f[R] commands.
.SS Bash
.PP
\f[I]ftl\f[R] is written in Bash, the language that packs a real punch
\&... and sometimes punches you.
It also strives to follow the spirit of unix by reusing what\[cq]s
available.
.PP
Most of the code is one liners, albeit long, and it\[cq]s structured to
be \f[I]easy\f[R] to expand.
.SH KEY BINDINGS
.PP
\f[I]ftl\f[R] uses vim-like key bindings by default, the bindings are
defined in the default ftlrc file.
.PP
\f[I]ftl\f[R] has many commands and thus many bindings.
The control key is not used but the Alt-gr key, in combination with the
shift key, is used extensively
.SS Default bindings
.PP
`Alt-gr'+c will open a window with all the current binding
.PP
A list of all bindings, in \f[I]fzf\f[R], wich allows you to search per
key or name.
.IP
.nf
\f[C]
map    section  key      command                
-------------------------------------------------------------------
ftl    file     c        copy          copy file to, prompts inline
\f[R]
.fi
.SS User defined bindings
.PP
You can override all the keys by creating your own rcfile and using the
\f[I]bind\f[R] function.
See <USER RCFILE, BINDINGS, COMMANDS, \&...> for some examples.
.IP
.nf
\f[C]
bind function arguments, all mendatory:

	map		map where the binding is saves 
	section		logical group the binding belongs to (hint)
	key		the keyboard key
	command		name of the internal command that is called
	short_ help	help displayed 
          

eg: bind ftl file k copy \[dq]copy file to, prompts inline\[dq]
\f[R]
.fi
.PP
In the default \f[I]ftlrc\f[R] file, associative arrays A for alt-gr and
SA for shift+Alt-gr are defined, they allow you to define bindings this
way:
.IP
.nf
\f[C]
eg: bin ftl filter \[dq]${A[d]}\[dq] clear_filters \[dq]clear filters\[dq]
\f[R]
.fi
.PP
When bindings are shown \f[I]alt-gr\f[R] is replaced by \f[I]\[uA]\f[R]
and \[dq]\f[I]shift+alt-gr\f[R] is replaced by \f[I]\[u21C8]\f[R]; as
well as the key the combination would generate that makes it easier to
search by name or by binding.
.SS Leader key
.PP
The \[lq]Leader key\[rq] is a prefix key used to extend \f[I]ftl\f[R]
shortcuts by using sequences of keys to perform a command.
The default is `\[rs]'
.IP
.nf
\f[C]
# set leader to \[dq]space\[dq]
bind ftl bind BACKSPACE_KEY leader_key \[aq]leader key SPACE_KEY
\f[R]
.fi
.SH COMMANDS TOC
.IP \[bu] 2
General Ftl Commands
.IP \[bu] 2
Command Mode
.IP \[bu] 2
Viewing modes
.IP \[bu] 2
Panes
.IP \[bu] 2
Tabs
.IP \[bu] 2
Moving Around
.IP \[bu] 2
Preview
.IP \[bu] 2
Sorting
.IP \[bu] 2
Filtering
.IP \[bu] 2
Searching
.IP \[bu] 2
Tags/Selection
.IP \[bu] 2
Marks
.IP \[bu] 2
History
.IP \[bu] 2
File And Directory Operations
.IP \[bu] 2
External Commands
.IP \[bu] 2
Media
.IP \[bu] 2
Shell Panes
.SS General Ftl Commands
.IP
.nf
\f[C]
Show keyboard bindings \[Fo]\[uA]c/\[co]\[Fc] 

	The bindings listing is generateed at runtime, if you add
	or modify bindings it will show in the listing. The listing
	is displayed in fzf which allows you to search by name but
	also by binding.

Show this man page \[Fo]?\[Fc]

	The man page is generated and shows the default bindings. You
	can configure *ftl* to show a different help if you prefer to
	cook your own.

Quit \[Fo]q\[Fc]

	Closes the current tab, it there are tabs, then closes the
	last created pane.

Quit all \[Fo]Q\[Fc]
	
	Closes all tabs and panes at once

Quit, keep shell \[Fo]\[at]\[Fc]

	Quit all but doesn\[aq]t close the shell pane if one exists

Quit, keep preview zoomed \[Fo]\[u21C8]q/\[*W]\[Fc]

	Quit *ftl* but doesn\[aq]t close the preview pane if one exists and
	zooms it.

Detach the preview \[Fo]$\[Fc]
	
	Open a new preview pane, the old preview pane is not under *ftl*
	control any more.

Cd \[Fo]G\[Fc]
	
	*ftl* prompts you for a path, the promt has path completions.
	You can also change directory with marks or by finding it, this
	is the most simplistic way. 

Set maximum listing depth \[Fo]*\[Fc]

	Set the maximum depth of listing, 1 shows the entries in the
	current directory. It\[aq]s sometime practicall but using multiple
	tabs or panes is more ergonomic.

Copy selection to clipboard \[Fo]\[uA]t/\[Tp]\[Fc]
	
	The selected entries are copied to the clipboard with full
	path, separated with by a space.

Pdh, pane used for debugging \[Fo]\[r?]\[Fc]

Bindings used internaly by *ftl*

	Refresh curent pane \[Fo]r\[Fc]
	Handle pane event   \[Fo]7\[Fc]
	Preview pane signal \[Fo]8\[Fc]
	Handle pane preview \[Fo]9\[Fc]
	Cd to shell pane    \[Fo]0\[Fc]
\f[R]
.fi
.SS Command Mode
.IP
.nf
\f[C]
Run commands \[Fo]:\[Fc] # implemented in \[dq]$FTL_CFGl/etc/extra_commands/shell\[dq]

	You are prompted, with edit, history, and completion, for a command:

	\[Fo]empty answer\[Fc] 		Cancel
	\[ha][1-9][0-9]*$ 		Goto entry
	\[ha]etags			Chose tagging method
	\[dq]load_tags\[dq]		Load tags from a file
	\[ha]tree			display a tree in a popup pane
	${C[$1]}		run the *ftl* command
	\[dq]${ftl_key_map[$1]}\[dq]	run the *ftl* command matching the shortcut
	\[ha]command		run command
	\[ha]-l command		run command, once per selection entry
	\[ha]-s command		run background command
	\[ha]-sl command		run background command, once per selection entry

View shell \[Fo]!\[Fc]
\f[R]
.fi
.SS Viewing Mode
.IP
.nf
\f[C]
Show size \[Fo]\[uA]s/\[ss]\[Fc]
	Changes the state of size display option (circular) :
		- no size
		- only files
		- file size and directory entries
		- file size and directory sizes (scans the sub directories)

Show/hide dot-files \[Fo].\[Fc]
	Default config shows dot files

Show/hide stat \[Fo]\[ha]\[Fc]
	Entry stat is added to the header 

Show/hide etags \[Fo]\[uA]./\[pc]\[Fc]
	See \[dq]Select etag type\[dq] below.

File/dir view mode \[Fo])\[Fc]
	Set the file/dir to (circular):
		- only files
		- only directories
		- files and directories

View mode \[Fo]M\[Fc]
	Set image mode (circular):
		- filter out images
		- filter out non images
		- show all files

Montage mode \[Fo]\[uA]m/\[mc]\[Fc]
	Directory preview will be a montage of the images in the directory.

Refresh montage \[Fo]\[u21C8]m/\[Om]\[Fc]
	The montage is generated once, a manual refresh is needed if new
	images are added to the directory

Preview directory only/all \[Fo]=\[Fc]
	No file preview is generated

Show/hide image preview \[Fo]DQUOTE\[Fc]
	Preview everything but not images

Show/hide extension preview \[Fo]#\[Fc]
	No preview for the current entry extension will be shown

Fzfi, using ueberzurg \[Fo]\[u21C8]i/\[.i]\[Fc]
	Use fzf and ueberzurg to find and display images

Preview lock \[Fo]\[u2370]\[Fc]
Preview lock clear \[Fo]\[u2370]\[Fc]
	tbd
\f[R]
.fi
.SS Panes
.IP
.nf
\f[C]
New ftl pane below \[Fo]_\[Fc]
New ftl pane left \[Fo]|\[Fc]
New ftl pane left, keep focus \[Fo]\[u21C8]x/>\[Fc]
New ftl pane right \[Fo]\[bb]\[Fc]
New ftl pane right, keep focus \[Fo]\[u21C8]z/<\[Fc]

Next pane or viewer \[Fo]\[aq]-\[aq]\[Fc]
	Set focus on the next pane
\f[R]
.fi
.SS Tabs
.IP
.nf
\f[C]
Each tab has its own index, indexes are not reused; each pane has
its own tabs. Tabs are close with \[Fo]q\[Fc], when the last tab is closed
the pane is closed.

New tab \[Fo]\[u21C8]s/\[sc]\[Fc]
Next tab \[Fo]TAB\[Fc]
\f[R]
.fi
.SS Moving around
.IP
.nf
\f[C]
Also see \[dq]cd\[dq] in *General Commands* above and *Marks* and
*History* below

*ftl* will automatically put you on a README if you haven\[aq]t visited
the directory before; afterward *ftl* will remembers which entry you
were on.


cd into directory or edit file \[Fo]ENTER\[Fc]
	edit file if not binary, for binary files try hexedit command

Cd to parent directory \[Fo]h\[Fc]
Down to next entry     \[Fo]j\[Fc]
Up to previous entry   \[Fo]k\[Fc]
cd into entry   \[Fo]l\[Fc]

Using arrow:

Cd to parent directory   \[Fo]arrow_left/D\[Fc]
Down to next entry       \[Fo]arrow_down/B\[Fc]
Up to previous entry     \[Fo]arrow_up/A\[Fc]
cd into directory \[Fo]arrow_right/C\[Fc]

Page down \[Fo]page_down/5\[Fc]
Page up   \[Fo]page_up/6\[Fc]

Move to \[Fo]g\[Fc]
	goes to, depending of where in the listing you are:

	- top
	- first file
	- last file

Next entry of same extension \[Fo]\[:o]\[Fc]
Next entry of different extension \[Fo]\[:O]\[Fc]
Goto entry by index \[Fo]\[:a]\[Fc]

Preview window (when possible):

Scroll preview up \[Fo]K\[Fc]
Scroll preview down \[Fo]J\[Fc]
\f[R]
.fi
.SS Preview
.IP
.nf
\f[C]
Preview show/hide \[Fo]v\[Fc]

Change preview size \[Fo]+\[Fc]
	chose a size in a predefined, see rc file, set of sizes

Preview once \[Fo]V\[Fc]
	Preview current entry (if preview pane is close), close the
	preview at the next command.

Alternative preview #1 \[Fo]\[uA]v/\[lq]\[Fc]
Alternative preview #2 \[Fo]\[u21C8]v/\[oq]\[Fc]
	Some entry have multiple preview types, these bindings let you
	to see the other type of preview.

	entry types with multiple preview types:
		- directories
		- media
		- pdf
		- tar files 

File preview at end \[Fo]\[u21C8]t/\[TP]\[Fc]
	show the bottom of the entry (text files in vim)

Hexadecimal preview \[Fo]\[uA]x/\[Fc]\[Fc]
\f[R]
.fi
.SS Sorting
.IP
.nf
\f[C]
Select sort order \[Fo]o\[Fc] from:
	- alphanumeric
	- size
	- date

Reverse sort order \[Fo]O\[Fc]

Select a sort order from a list of external sorts \[Fo]\[uA]f/\[u0111]\[Fc]
	IE: by extension
\f[R]
.fi
.SS Filtering
.IP
.nf
\f[C]
Set filter #1 \[Fo]f\[Fc]
Set filter #2 \[Fo]F\[Fc]

Clear all filters \[Fo]\[uA]d/\[Sd]\[Fc]

Select a filter from a list of external filters \[Fo]\[uA]f/\[u0111]\[Fc] ;

by_extension			# keep files with matching extensions
by_file				# keep only selected files, additive
by_file_reset_dir		# keep only selected files, exclusive
by_file_global			# keep only selected files, all tabs, additive
by_file_global_reset_dir	# keep only selected files, all tabs, exclusive
by_no_extension			# keep files not matching extensions
by_only_tagged			# keep tagged files
by_size				# keep files over minimum size

Set reverse-filter \[Fo]\[uA]a/\[Of]\[Fc]
	Filters out what you don\[aq]t want to see. Applied after other
	filters are applied. It can be set in your ftlrc file.

	eg: keep all the files containing an \[aq]f\[aq] except those containing an \[aq]i\[aq]
		\[Fo]f\[Fc]  -> f
		\[Fo]\[uA]a\[Fc] -> i

	eg: always hide vim swap files, set in rcfile
		rfilter0=\[aq]\[rs].sw.$\[aq]

Hide extension \[Fo]%\[Fc], globally
	Hide all files having the same extention as the current file.
	You can hide multiple extensions. You can successively reduce
	the files displayed .

Enable all extensions \[Fo]\[u21C8]k/&\[Fc]
	enables the hidden extensions.
\f[R]
.fi
.SS Searchings
.IP
.nf
\f[C]
Incremental search \[Fo]/\[Fc]
	Press \[aq]enter\[aq] to end.

Find next \[Fo]n\[Fc]
Find previous \[Fo]N\[Fc]

Searching with _fzf_ and _rg_:
	*ftl* runs fzf to let you pick one or multiple entries.

	If you select only one entry, *ftl* positons you on the entry,
	you can also open the entry in a new tab with \[aq]ctrl+t\[aq].

	If you select multiple entries, end with \[aq]ctrl+t\[aq].

Fzf find current directory file \[Fo]b\[Fc]
Fzf find files and directories  \[Fo]\[uA]b/\[rq]\[Fc]
Fzf find only directories       \[Fo]\[u21C8]b/\[cq]\[Fc]

Rg to file \[Fo]}\[Fc]
\f[R]
.fi
.SS Tags/Etags
.IP
.nf
\f[C]
A tag is a selected file, *ftl* will display a glyph next to tagged
files. Option auto_tags controls if tags are automatically merged to
other panes.

When using tags and multiple class tags are present, *ftl* will ask
which class to use.

The number of tagged entries is displayed in the header

Tag down \[Fo]y\[Fc]
	Tag current entry in \[dq]normal\[dq] tag class and move one entry down

Tag up \[Fo]Y\[Fc]
	Tag current entry in \[dq]normal\[dq] tag class and move one entry up

Class tag \[Fo]1\[Fc] \[Fo]2\[Fc] \[Fo]3\[Fc]
	Tag current entry in given class and move one entry down. The entry
	is addorned with the class name

Class tag D \[Fo]4\[Fc]
	Tag current entry in D class and move one entry down. The entry
	is addorned with the class name \[dq]D\[dq].
	
Tag all files \[Fo]\[uA]y/\[<-]\[Fc]
	Tag all the files, no sub directories, in the current directory

Tag all files and subdirs \[Fo]\[u21C8]y/\[Ye]\[Fc]
	Tag all the files and sub directories in the current directory

Fzf tag files \[Fo]t\[Fc]
	Open fzf to tag files, no sub directories, select with \[Fo]TAB>,
	multiple selection is possible.

Fzf tag files and subdirs \[Fo]T\[Fc]
	Open fzf to tag files and sub directories, select with \[Fo]TAB>,
	multiple selection is possible.

Untag all \[Fo]u\[Fc]
	Untag all files and directories, including those in other
	directories.

Untag fzf \[Fo]U\[Fc]
	Opens fzf to let you chose which entries to untag

Fzf goto \[Fo]\[uA]g/\[u014B]\[Fc]
	Opens fzf to let you chose an entry among the tags, then
	change directory to where the tag is.

	This is can be handy when tags are read from a file with option
	-t on the command line or via the \[aq]load_tags\[aq] shell command

Merge tags from all panes \[Fo]\[uA]o/\[oe]\[Fc]
	if option auto_tags=0,  merge tags from all panes

Fzf merge tags from panes \[Fo]\[u21C8]0/\[de]\[Fc]
	if option auto_tags=0, chose the pane to merge tags from

Select etag type from list \[Fo]\[u21C8]./\[a.]\[Fc]
	See \[dq]Show/hide etags\[dq] above.
\f[R]
.fi
.SS Marks
.IP
.nf
\f[C]
Mark directory/file \[Fo]m\[Fc] + character

Go to mark \[Fo]QUOTE\[Fc] + character
	QUOTE+QUOTE will take you to the last directory

Fzf go to mark \[Fo]\[u21C8]\[aq]/\[tmu]\[Fc]
	You can open multiple marks in tabs with \[Fo]ctrl-t\[Fc]

Add persistent mark \[Fo],\[Fc]
Fzf to persistent mark \[Fo];\[Fc]
	You can open multiple marks in tabs with \[Fo]ctrl-t\[Fc]

Clear persistent marks \[Fo]\[uA]k/\[u0138]\[Fc]
\f[R]
.fi
.SS History
.IP
.nf
\f[C]
*ftl* keeps two location histories, one in the currentsession and one
global (sum of all sessions)

Fzf history all sessions \[Fo]\[ad]\[Fc]
Fzf history all sessions \[Fo]\[uA]h/\[u0127]\[Fc]
	You can open multiple marks in tabs with \[Fo]ctrl-t\[Fc]

Fzf history current session \[Fo]H\[Fc]
	You can open multiple marks in tabs with \[Fo]ctrl-t\[Fc]

Fzf delete from all sessions history \[Fo]\[u21C8]h/\[u0126]\[Fc]
	Uses fzf to mark entries that will be removed from the history

Delete all session history \[Fo]\[u21C8]d/\[-D]\[Fc]
\f[R]
.fi
.SS File and directory operations
.IP
.nf
\f[C]
Create new file        \[Fo]i\[Fc]
Create new directory   \[Fo]I\[Fc]
Create entries in bulk \[Fo]\[uA]i/\[->]\[Fc]
	Opens _vim_, lines ending with / will create directories

Delete selection \[Fo]d\[Fc]
	uses configuration *RM*, see ftlrc.

Copy entry \[Fo]c\[Fc]
Copy selection \[Fo]p\[Fc]

Move selection \[Fo]P\[Fc]
Move selection \[Fo]\[u21C8]p/\[Tp]\[Fc]
	Uses _fzf_mv_.

Rename \[Fo]R\[Fc]
	Uses _vidir_.

Symlink selection \[Fo]\[uA]l/\[/l]\[Fc]
Symlink follow    \[Fo]\[u21C8]l/\[/L]\[Fc]

Flip selection executable bit \[Fo]x\[Fc]
\f[R]
.fi
.SS External Commands
.IP
.nf
\f[C]
Example of command integration, see \[aq]etc/bindings/leader_ftl\[aq].

Compress/decompress            \[Fo]\[u02FD]fc\[Fc]

Convert pdf to text file       \[Fo]\[u02FD]fP\[Fc]

Display stat in preview pane   \[Fo]\[u02FD]fs\[Fc]

Encrypt/decrypt using password \[Fo]\[u02FD]fz\[Fc]

Encrypt/decrypt using _gpg_    \[Fo]\[u02FD]fx\[Fc]

Shred selection using _shred_  \[Fo]\[u02FD]s\[Fc]

Reduce jpg image size          \[Fo]\[u02FD]fi\[Fc]

Reduce png to jpg              \[Fo]\[u02FD]fi\[Fc]

Reduce pdf size                \[Fo]\[u02FD]fp\[Fc]

Reduce video size              \[Fo]\[u02FD]fv\[Fc]

Lint current directory         \[Fo]\[u02FD]fl\[Fc]

Send mail                      \[Fo]\[u02FD]fm\[Fc]

Terminal popup                 \[Fo]\[u02FD]ft\[Fc]
\f[R]
.fi
.SS Media
.IP
.nf
\f[C]
Images:
	Preview:

External viewer, m1 \[Fo]e\[Fc]
External viewer, m2, detached \[Fo]E\[Fc]
External viewer, m3 \[Fo]\[uA]e/\[Eu]\[Fc]
External viewer, m4 \[Fo]\[u21C8]e/\[ct]\[Fc]

Terminal media player \[Fo]w\[Fc]
Fzf chose viewer \[Fo]W\[Fc]

Videos:
	Preview:

External viewer, m1 \[Fo]e\[Fc]
External viewer, m2, detached \[Fo]E\[Fc]
External viewer, m3 \[Fo]\[uA]e/\[Eu]\[Fc]
External viewer, m4 \[Fo]\[u21C8]e/\[ct]\[Fc]

Terminal media player \[Fo]w\[Fc]
Fzf chose viewer \[Fo]W\[Fc]

Music:
	Preview:
	Live preview:

Terminal media player \[Fo]w\[Fc]
Kill sound preview \[Fo]a\[Fc]

External viewer, m1 \[Fo]e\[Fc]
External viewer, m2, detached \[Fo]E\[Fc]
External viewer, m3 \[Fo]\[uA]e/\[Eu]\[Fc]
External viewer, m4 \[Fo]\[u21C8]e/\[ct]\[Fc]

Fzf chose viewer \[Fo]W\[Fc]

Comics:
	Preview:

External viewer, m1 \[Fo]e\[Fc]
External viewer, m2, detached \[Fo]E\[Fc]
External viewer, m3 \[Fo]\[uA]e/\[Eu]\[Fc]
External viewer, m4 \[Fo]\[u21C8]e/\[ct]\[Fc]

Fzf chose viewer \[Fo]W\[Fc]

Creating and using a viewer:
	core viewers are in \[aq]$CFG_CFG/etc/viewers\[aq]

	extra viewers are in\[aq]$CFG_CFG/viewers\[aq]

	\[aq]$CFG_CFG/etc/ftlrc\[aq], the configuration file, contains an
		example of user defined viewers
	
\f[R]
.fi
.SS Shell panes
.IP
.nf
\f[C]
synch shell pane directory to ftl, and ftl directory to shell pane

moving from shell pane to ftl and from ftl to shell pane

multiple shell panes

background commands vs foreground commands
	when commands fail

bindings:
Shell pane \[Fo]s\[Fc]
Shell pane with selected files \[Fo]S\[Fc]
Shell pane, zoomed out \[Fo]\[u2370] - not asssigned\[Fc]

Cd to shell pane \[Fo]\[u21C8]0/\[de]\[Fc]
Send selection to shell pane \[Fo]X\[Fc]
	Comparing Files
\f[R]
.fi
.SH FILES AND DIRECTORIES
.SS ftlrc
.PP
\f[I]ftl\f[R] reads it\[cq]s configuration from
\[ti]/.config/ftl/etc/ftlrc
.PP
you can override configuration in your own \[ti]/.ftlrc after sourcing
the default configuration
.SH ENVIRONMENT
.PP
$FTL_CFG (set by default to $HOME/.config/ftl) is the directory that
contains \f[I]ftl\f[R] code and data.
.SH CONFIGURATION
.PP
See \f[I]config/ftl/etc/ftlrc\f[R], ftl\[cq]s default config file, for a
complete documentation
.SH INSTALL
.PP
Install ftl in $FTL_CFG and symlink \f[I]ftl\f[R] somewhere in your
$PATH
.PP
Also read the \f[B]INSTALL\f[R] file
.SH EXAMPLES
.SS RCfile
.IP
.nf
\f[C]
# source ftl default config
\&. $FTL_CFG/etc/ftlrc

# source some extra commands ad bindings
\&. $FTL_CFG/user_bindings/bindings

# change leader-key to SPACE_KEY
bind ftl bind SPACE_KEY leader_key \[aq]leader key \[dq]\[u02FD]\[dq]\[aq]

# don\[aq]t show swap files
rfilter0=\[aq]\[rs].sw.$\[aq]

# display options for fzf
fzf_opt=\[dq]-p 90% --cycle --reverse --info=inline --color=hl+:214,hl:214\[dq]

# columns when displaying command mapping in popup
CMD_COLS=150

# how to delete files
RM=\[dq]rip --graveyard $HOME/graveyard\[dq] ; mkdir -p $HOME/graveyard

# alternative directory preview
NCDU=gdu

# define your marks
declare -A marks=(
	[0]=/
	[1]=$HOME/$
	[3]=$HOME/downloads/$
	[$\[dq]\[aq]\[dq]]=\[dq]$(tail -n1 $ghist)\[dq] # last visited directory
	)

# load git support 
\&. \[ti]/.config/ftl/external_tags/git

# vim: set filetype=bash :
\f[R]
.fi
.SS New Command
.IP
.nf
\f[C]
This example can be found in $FTL_CONFIG/user_bindings/01_shred

shred_command() 
{
# prompt user
((${#selection[\[at]]} > 1)) && plural=\[aq]ies\[aq] || plural=\[aq]y\[aq]
prompt \[dq]shred: ${#selection[\[at]]} entr${plural} [yes|N]? \[dq]

[[ $REPLY == yes ]] && # reply must be \[dq]yes\[dq]
	{
	shred -n 2 -z -u \[dq]${selection[\[at]]}\[dq] && tags_clear # use shred utility and clear the selection tags
	cdir # reload directory
	} ||
	# redisplay list to override prompt
	list

false # reset key_map to default
}

# bind shortcut \[Fo]s\[Fc] in the leader map
bind leader file s shred_command \[dq]override selection multiple times and deletes it, *** bypasses RM ***\[dq]

# vim: set filetype=bash :
\f[R]
.fi
.SS Directory Picker
.IP
.nf
\f[C]
Add the following code to your bashrc:
	source $path_to_ftl/cdf

This adds a _cdf_ function which will open an *ftl* instance you can
use to navigate your directories, jump to marks, ...

Press \[Fo]q\[Fc] to quit and jump to the directory you\[aq]re currently in.
Press \[Fo]Q\[Fc] to cancel.
\f[R]
.fi
.SS Vim File Picker
.IP
.nf
\f[C]
Add the following code to your vimrc:

function! Ftl(preview)
    let temp = tempname()
    let id=localtime()

    if ! has(\[dq]gui_running\[dq])
	\[dq]exec \[dq]silent !echo waiting for signal: ftl_\[dq] . id
	exec \[dq]silent !tmux new-window ftlvim \[dq] . shellescape(temp) . \[dq] ftl_\[dq] . id . \[dq] \[dq] . a:preview . \[dq] ; tmux wait ftl_\[dq] . id
    endif

    if !filereadable(temp)
	redraw!
	return
    endif

    let names = readfile(temp)
    if empty(names)
	redraw!
	return
    endif

    for name in names
	exec \[aq]tabedit \[aq] . fnameescape(name)
    endfor

    redraw!
endfunction

map <silent> <leader>f :call Ftl(1)<cr>
\f[R]
.fi
.SH BUGS AND CONTRIBUTIONS
.PP
Please report bug to <https://https://github.com/nkh/ftl/issues>
.PP
Contributions are best done via pull requests on github.
Keep code to a minimum.
.SH AUTHOR
.PP
\[co] Nadim Khemir 2020-2022
.PP
mailto:nadim.khemir\[at]gmail.com
.PP
CPAN/Github ID: NKH
.SH LICENSE
.PP
Artistic licence 2.0 or GNU General Public License 3, at your option.
.SH SEE ALSO
.PP
ranger, fff, clifm, lfm, nnn, vifm, broot, gitfm, \&...
