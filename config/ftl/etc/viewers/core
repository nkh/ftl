# preview and external viewer for ftl

source "$FTL_CFG/etc/commands/open_with"

ext_viewers()
{
[[ -d "$n" ]]                     && { ext_dir   ; return ; }
[[ $e =~ html ]]                  && { ext_html  ; return ; }
[[ $e =~ svg     ]]               && { ext_svg  ; return ; }
[[ $e =~ $ifilter ]]              && { ext_image ; return ; }
[[ $e =~ $mfilter ]]              && { ext_media ; return ; }
[[ $e == pdf || $e == PDF ]]      && { ext_pdf   ; return ; }
[[ $e == sc ]]                    && { ext_scim  ; return ; }

((emode == 3))       && { open_with ; return ; }

mime_get

[[ $e =~ ^json|yml$ || $mtype =~ ^text ]] && [[ -s "$n" ]] && { ext_text ; return ; }

open_with
}


pviewers()
{
((${#vfiles[@]} || ${#vdirs[@]})) && { vfile_prev && return ; } 

[[ $e ]] && ((pignore["${e@Q}"])) && { pignore   ; return ; }
[[ -e "$fs/lock_preview/$n" ]]    && { plock     ; return ; }
[[ "${pdir_only[tab]}" ]]         && { [[ -d "$n" ]] || { tcpreview ; return ; } ; }

[[ $e == cbr ]]                   && { pcbr      ; return ; }
[[ $e == cbz ]]                   && { pcbz      ; return ; }
[[ $e == html ]]                  && { phtml     ; return ; }
[[ $e == svg ]]                   && { psvg      ; return ; }
[[ $e =~ $ifilter ]]              && { pimage    ; return ; }
[[ $e == mp3 ]]                   && { pmp3      ; return ; }
[[ $e =~ $mfilter ]]              && { pmedia    ; return ; }
[[ $e =~ ^md|MD$ ]]               && { pmd       ; return ; }
[[ $e == pdf || $e == PDF ]]      && { ppdf      ; return ; }
[[ $e == epub ]]                  && { pepub     ; return ; }
[[ $e == 1   ]]                   && { pman      ; return ; }
[[ $e == zip ]]   && ((extmode))  && { pcomp     ; return ; }
[[ $e == rar ]]   && ((extmode))  && { pcomp     ; return ; }
[[ $f =~ \.tar ]] && ((extmode))  && { pcomp     ; return ; }
[[ -p "$n" ]]                     && { ppipe     ; return ; }
[[ $e =~ ^json|yml$ ]]            && { ptext     ; return ; }
[[ $e == sc ]]                    && { pscim     ; return ; }
[[ $e =~ ^asciio$ ]]              && { pasciio   ; return ; }
[[ -d "$n" ]]                     && { pdir      ; return ; }

mime_get ; is_bin "$n" ; file_b="$(file -b "$n")"

((! is_bin)) && [[ -s "$n" ]] && [[ "$file_b" =~ ^Unicode || $mtype =~ ^text || $mtype == 'application/x-shellscript' || $mtype == application/x-perl ]] && { ptext && return ; }
[[ "$file_b" =~ ASCII\ text ]] || [[ "$file_b" =~ Unicode\ text ]] && { ctsplit "ansi_show \"$n\" | $MD_PAGER " ; return ; }

ptype
}

ext_dir()   {  $G_PLAYER "$n" &>/dev/null & }
ext_html()  { ((emode == 1)) && { tcpreview ; w3m -o confirm_qq=0 "$n" ; } || { (qutebrowser "$n" 2>&- &) ; } ; }
ext_svg()   { t="$thumbs/svg/$f.pdf" ; [[ -e $t ]] || $pgen/svg_to_pdf "$f" "$thumbs/svg" ; run_maxed mupdf "$t" ; }
ext_image() { images=() ; for img in "${files[@]}" ; do [[ "$img" =~ $ifilter ]] && images+=("$img") ; done ; $SXIV -b -q -o -f "$n" $(printf "%q " "${images[@]}") ; }
ext_media() { ((emode == 1)) && { player_k ; $T_PLAYER "$n" </dev/null &>/dev/null & } || ($G_PLAYER "${selection[@]}" &>/dev/null &) ; mplayer=$! ; }
ext_pdf()   { ((emode == 1)) && { ((pdf_prev_image)) && run_maxed mupdf "$n" || ext_pdf_vi ; } || { ((emode == 3)) && run_maxed mupdf "$n" ; } || { mupdf "$n" 2>/dev/null & } ; }
ext_pdf_vi(){ t="$thumbs/pdf/${f}1.txt" ; [[ -e $t ]] || $pgen/pdf "$f" $thumbs/pdf 1 && edit "$t" ; }
ext_text()  { tcpreview ; tsplit "$EDITOR -t ${selection[@]@Q}" "33%" '-h -b' -R ; pane_id= ; }
ext_scim()  { tcpreview ; exec 2>&9 ; scim ${n@Q} ; exec 2>"$fs/log" ;  }

pignore()   { in_pdir= ; in_viprev= ; ptype ; }
plock()     { vipreview "$fs/lock_preview/$n" ; }
ptype()     { mime_get ; ctsplit "echo ${f@Q} | lscolors ; echo '$mtype' ; file -b ${n@Q} ; stat -c %s ${n@Q} | numfmt --to=iec ; read -sn 100" ; }

pcbr()      { t="$thumbs/cbr/$f.jpg" ; [[ -e $t ]] || $pgen/cbr "$f" "$thumbs/cbr" ; pw3image "$t" ; }
pcbz()      { t="$thumbs/cbz/$f.jpg" ; [[ -e $t ]] || $pgen/cbz "$f" "$thumbs/cbz" ; pw3image "$t" ; }

pdir()      { ((extmode == 1)) && pdir_du || { ((extmode == 2)) && pdir_ls ; } || { [[ "$montage" ]] && pdir_image ; } || { echo "${ofs:-$fs}" >$fsp/fs ; pdir_dir ; } ; }
pdir_dir()  { ((in_pdir)) && [[ $pane_id ]] && { tmux send -t $pane_id 'Ã…' ; } || { tmux selectp -t $my_pane ; ctsplit "ftl ${n@Q} $pfs 1" ; in_pdir=1 ; } ; true ; }
pdir_du()   { ctsplit "$NCDU \"$n\" ; read -sn 1000" ; true ; }
pdir_ls()   { ctsplit "ls -lsh --group-directories-first --color=always \"$n\" ; read -sn 1000" ; true ; }
pdir_image(){ in_pdir= ; m="$ftl_root/montage/$n/montage.jpg" ; [[ -e "$m" ]] || { header '' "$msg_m" ; "$pgen/montage" "$ftl_root" "$n" ; header '' "$head" ; } ; pw3image "$m" ; true ; }

ppipe()     { ctsplit "echo \"fifo (named pipe)\"; read -sn 100" ; }

phtml()     { t="$thumbs/html/$f.txt" ; [[ -e $t ]] || $pgen/html "$f" "$thumbs/html" ; vipreview "$t" ; }
pimage()    { ((extmode)) && { ctsplit "identify -format 'type: %m\nsize: %wx%h\nbits: %q\ndisk: %b\n' ${n@Q} ; read -sn1" ; geo_winch ; } || pw3image "$n" ; }
psvg()      { t="$thumbs/svg/$f.jpg" ; [[ -e $t ]] || $pgen/svg "$f" "$thumbs/svg" ; pw3image "$t" ; }
pmp3()      { pmlive || { ctsplit "$PAGER_ANSI <$(gen_exift) ; read -sn1" ; } ; }
pmedia()    { pmlive || { t="$thumbs/$e/$f.jpg" ; [[ -f "$t" ]] || $pgen/$e "$f" "$thumbs/$e"; [[ -f "$t" ]] && pw3image "$t" || ptype ; } ; }
pmlive()    { ((extmode)) && { player_k ; ctsplit "cat $(gen_exift) ; $T_PLAYER_STATUS ${n@Q}" ; true ; } ; }

pmd()       { ((extmode)) && ctsplit "$MD_RENDER2 \"$n\" | $MD_PAGER" || ctsplit "$MD_RENDER1 \"$n\" | $MD_PAGER" ;  }
ptext()     { vipreview "$n" ; }

ppdf()      { (( extmode==2 || pdf_prev_image)) && ppdfpng || { t="$thumbs/pdf/$f$extmode.txt" ; [[ -e $t ]] || $pgen/pdf "$f" $thumbs/pdf $extmode && vipreview "$t" ; } ; }
ppdfpng()   { t="$thumbs/$e/et_$(head -c50000 "$n" | md5sum | cut -f1 -d' ').png" ; [[ -f "$t" ]] || { mutool draw -o "$t" "$n" 1 2>/dev/null ; } ; pw3image "$t" ; true ; }

pepub()     { (( extmode==2 || pdf_prev_image)) && pepubpng || { t="$thumbs/epub/$f$extmode.txt" ; [[ -e $t ]] || $pgen/epub "$f" $thumbs/epub $extmode && vipreview "$t" ; } ; }
pepubpng()  { t="$thumbs/$e/et_$(head -c50000 "$n" | md5sum | cut -f1 -d' ').png" ; [[ -f "$t" ]] || { mutool draw -o "$t" "$n" 1 2>/dev/null ; } ; pw3image "$t" ; true ; }

pman()      { ctsplit "man \"$n\" ; read -sn 1000" ; true ; }

pscim()     { ctsplit "scim \"$n\" | $PAGER ; read -sn100" ; }
pasciio()   { ctsplit "asciio_to_text \"$n\" | $PAGER ; read -sn100" ; }

pcomp()     { [[ $e == zip ]] && _pcomp unzip -l || { [[ $e == rar ]] && _pcomp unrar list ; } || { [[ $f =~ \.tar ]] && _pcomp tar --list --verbose -f ; } ; }
_pcomp()    { ((extmode)) && { fp="$fs/$f.txt" ; [[ -e "$fp" ]] || timeout 1 "$@" "$f" >"$fp" ; vipreview "$fp" ; } ; }

# vim: set filetype=bash :

