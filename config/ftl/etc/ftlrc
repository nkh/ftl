# directories
ftl_cfg="$HOME/.config/ftl"
pgen="$ftl_cfg/generators"
ftl_root=$ftl_cfg/var
ftl_cmds=$ftl_root/cmds
ghist=$ftl_root/history
thumbs=$ftl_root/thumbs ; mkdir -p $thumbs ; 
help_file="$ftl_cfg/etc/man/ftl.1"
help_command="man \"$help_file\""
generators="$ftl_cfg/generators"

# marks
declare -A marks=([0]=/$ [1]="$HOME/$" [2]=/CHANGE_ME/dir/filename [3]=/CHANGE_ME/dir/filename [$"'"]="$(tail -n1 $ghist)")

#options 
shell_h=40%
auto_tags=1
pdhl=
prev_all=1
zoom=0 ; zooms=(70 50 30)
msg_m='Creating montage ...'
msg_du='Computing dir sizes ...'
find_auto=README
line_color0="\e[2;40;90m"
line_color="$line_color0"
line_color_hi="\e[38;5;240m"
cursor_color0='\e[7;34m'
cursor_color="$cursor_color0"
cursor_color_search='\e[7;35m'
quick_display=512
show_line=1
show_size=0 # 0:none, 1: file sizes, 2: file sized + dir entries, 3: file sizes + dir sized recursive
show_date=1
show_tar=0
tbcolor 67 67
TBCOLORS='236 52'

# external tags
etag=0
#. $ftl_cfg/external_tags/git ; etag=1

sort_type0=0
sort_reversed0=
sglyph=( ‚ç∫ ü°ï )
iglyph=('' ·¥µ ·¥∫)
lglyph=('' ·µà ·∂†)
tglyph=('' ¬π ¬≤ ¬≥ D) 
ifilter='webp|jpg|jpeg|JPG|png|gif'; mfilter='mp3|mp4|flv|mkv';
fzf_opt="-p 90% --cycle --reverse --info=inline --color=hl+:214,hl:214"
fzfp_opt="--cycle --expect=ctrl-t --reverse"

#external commands
FTLI_CLEAN=0 # set to 1 if not using konsole
FTLI_W=10
FTLI_H=19

GPGID=CHANGE.ME

G_PLAYER=vlc
T_PLAYER="mplayer -vo null"
T_PLAYER_STATUS='mplayer -msglevel all=-1 -msglevel statusline=6 -nolirc -msgcolor -novideo -vo null'
PREVIEW_SHOW="$ftl_cfg/viewers/cmus"

PAGER_ANSI='/usr/bin/less -R'
MD_PAGER='moar --no-statusbar -no-linenumbers'
MD_RENDER1='lowdown -Tterm'
MD_RENDER2='vmd'
HEXEDIT=hexedit
SHRED=shred
MIMETYPE=mimemagic
NCDU=ncdu # ncdu ncdu2 gdu tdu

RM="rm -rf"
	# how you want your files deleted
	# RM="rip --graveyard '$HOME/graveyard'" ; mkdir -p $HOME/graveyard
	# my_delete() { echo my_delete ; printf "%s\n" "$@" ; read -sn1 ; }
	# RM=my_delete

# external viewers and previewers
externals() { echo emedia edir eimage epdf ehtml etext ewith ; }
previewers(){ echo plock pdir pignore pmp4 pimage pmp3 ppdf phtml mime_get pmd pperl pshell ptext pcomp pcbr pcbz ptype ; }
# p_your_viewer(){ vipreview ~/.bashrc ; }

CMD_COLS=150 # columns when displaying command mapping in popup

# Keyboard mappings
# 0, 7-9 are used by ftl and correspond to SIG_XXX entries below

declare -A SA=( [a]=¬∫ [b]=‚Äô [c]=¬© [d]=√ê [e]=¬¢ [f]=¬™ [g]=≈ä [h]=ƒ¶ [i]=ƒ± [k]='&' [l]=≈Å [m]=¬∫ [o]=≈í [p]=√û [q]=Œ© [r]=¬Æ [s]=¬ß [t]=√û [u]=‚Üë [v]=‚Äò [x]='>' [y]=¬• [z]='<' ["'"]=√ó [.]=Àô [0]=¬∞ [/]=√∑)
declare -A LSA=([¬∫]=a [‚Äô]=b [¬©]=c [√ê]=d [¬¢]=e [¬™]=f [≈ä]=g [ƒ¶]=h [ƒ±]=i ['&']=k [≈Å]=l [¬∫]=m [≈í]=o [√û]=p [Œ©]=q [¬Æ]=r [¬ß]=s [√û]=t [‚Üë]=u [‚Äò]=v ['>']=x [¬•]=y ['<']=z [√ó]="'" [Àô]=. [¬∞]=0 [√∑]=/)
declare -A A=(  [a]=¬™ [b]=‚Äù [c]=¬© [d]=√∞ [e]=‚Ç¨ [f]=ƒë [g]=≈ã [h]=ƒß [i]=‚Üí [k]=ƒ∏ [l]=≈Ç [m]=¬µ [o]=≈ì [p]=√æ [q]='@' [r]=¬Æ [s]=√ü [t]=√æ [u]=‚Üì [v]=‚Äú [x]=¬ª [y]=‚Üê [z]=¬´ [.]=¬∑)
declare -A LA=( [¬™]=a [‚Äù]=b [¬©]=c [√∞]=d [‚Ç¨]=e [ƒë]=f [≈ã]=g [ƒß]=h [‚Üí]=i [ƒ∏]=k [≈Ç]=l [¬µ]=m [≈ì]=o [√æ]=p ['@']=q [¬Æ]=r [√ü]=s [√æ]=t [‚Üì]=u [‚Äú]=v [¬ª]=x [‚Üê]=y [¬´]=z [¬∑]='.')

bind ftl bind	 	BACKSPACE_KEY	leader_key		'leader key "\"'

bind ftl file		I		create_dir		"creat new directory, prompts inline"
bind ftl file		P		tag_move		"move selection to current directory"
bind ftl file		R		rename			"rename/bulk rename selection using vidir"
bind ftl file		X		chmod_x			"chmod a-x selection, flips selection executable bit"
bind ftl file		c		copy			"copy file to, prompts inline"
bind ftl file		d		delete_selection	"delete selection using config $RM"
bind ftl file		i		create_file		"creat new file, prompts inline"
bind ftl file		p		tag_copy		"copy selection to current directory"
bind ftl file		x		chmod_x			"chmod a+x selection, flips selection executable bit"
bind ftl file		"${SA[p]}"	tag_move_to		"move to selection to predefine location using fzf_mv"
bind ftl file		"${A[i]}"	create_bulk		"creat in files and directories in bulk, uses $EDITOR, lines ending with / will create directories"
bind ftl file		"${A[l]}"	link			"symlink selection in current directory"
bind ftl file		"${SA[l]}"	follow_link		"symlink follow"
bind ftl filter		"#"		preview_ext_ign		"show/hide extension preview"
bind ftl filter		"%"		preview_hide_ext	"hide extension"
bind ftl filter		"&"		preview_hide_clr	"enable all extensions"
bind ftl filter		"."		show_hidden		"show/hide dot-files"
bind ftl filter		F		set_filter2		"set filter 2"
bind ftl filter		f		set_filter		"set filter 1"
bind ftl filter		"${SA[f]}"	filter_reverse		"set reverse filter"
bind ftl filter		"${A[.]}"	etag_show		"show/hide etags"
bind ftl filter		"${SA[.]}"	etag_select		"select etag type"
bind ftl filter		"${A[d]}"	clear_filters		"clear filters"
bind ftl filter		"${A[f]}"	filter_ext		"select filter"
bind ftl find		"/"		find_entry		"find"
bind ftl find		N		find_previous		"find previous"
bind ftl find		b		find_fzf		"fzf find current directory file"
bind ftl find		n		find_next		"find next"
bind ftl find		"}"		go_rg			"rg to file"
bind ftl find		"${SA[b]}"	find_fzf_dirs		"fzf find directories"
bind ftl find		"${A[b]}"	find_fzf_all		"fzf find"
bind ftl ftl		"$"		editor_detach		"detach editor preview"
bind ftl ftl		STAR_KEY	depth			"maximum listing depth"
bind ftl ftl		"?"		ftl_help		"show help"
bind ftl ftl		G		change_dir		"cd"
bind ftl ftl		q		quit_ftl		"quit"
bind ftl ftl		Q		quit_all		"quit all"
bind ftl ftl		AT_KEY		quit_keep_shell		"quit, keep shell"
bind ftl ftl		"${SA[q]}"	quit_keep_preview	"quit, keep preview zoomed"
bind ftl ftl		r		refresh_pane		"refresh"
bind ftl ftl		¬ø		pdh_pane		"pdh pane"
bind ftl ftl		"${A[c]}"	k_bindings		"show keyboard bindings"
bind ftl ftl		"${A[t]}"	copy_clipboard		"copy selection to clipboard"
bind ftl history	H		history_go		"fzf history current session"
bind ftl history	"¬®"		ghistory2		"fzf history all sessions"
bind ftl history	"${SA[d]}"	ghistory_clear		"delete current session history"
bind ftl history	"${SA[h]}"	ghistory_edit		"fzf edit all sessions history"
bind ftl history	"${A[h]}"	ghistory		"fzf history all sessions"
bind ftl marks		QUOTE_KEY	mark_go			"go to mark"
bind ftl marks		"${SA["'"]}"	mark_go			"go to mark, new tab"
bind ftl marks		","		gmark			"add persistent mark"
bind ftl marks		";"		gmark_fzf		"fzf to persistent mark"
bind ftl marks		m		mark			"mark directory/file"
bind ftl marks		ALT_QUOTE_KEY	mark_fzf		"fzf to mark"
bind ftl marks		"${A[k]}"	gmarks_clear		"clear persistent marks"
bind ftl media		E		external_mode2		"external viewer m2, detached"
bind ftl media		W		preview_show_fzf	"fzf viewer"
bind ftl media		a		player_kill		"kill sound preview"
bind ftl media		e		external_mode1		"external viewer, m1"
bind ftl media		"${A[e]}"	external_mode3		"external viewer, m3"
bind ftl media		"${SA[e]}"	external_mode4		"external viewer, m4"
bind ftl media		w		preview_show		"terminal media player in background"
bind ftl move		ENTER_KEY	enter			"enter; cd or open file"
bind ftl move		5		move_page_up		"page down"
bind ftl move		6		move_page-down		"page up"
bind ftl move		A		move_up_arrow		"up to previous entry"
bind ftl move		B		move_down_arrow		"down to next entry"
bind ftl move		C		move_right_arrow	"right; cd into directory"
bind ftl move		D		move_left_arrow		"cd to parent directory"
bind ftl move		J		preview_down		"scroll preview down"
bind ftl move		K		preview_up		"scroll preview up"
bind ftl move		g		top_file_bottom		"go to top/file/bottom"
bind ftl move		h		move_left		"cd to parent directory"
bind ftl move		j		move_down		"down to next entry"
bind ftl move		k		move_up			"up to previous entry"
bind ftl move		l		move_right		"right; cd into entry"
bind ftl move		√§		goto_entry		"goto entry by index"
bind ftl move		√∂		goto_alt1		"next entry of same extension"
bind ftl move		√ñ		goto_alt2		"next entry of different extension"
bind ftl pane		"<"		pane_left		"extra pane right"
bind ftl pane		">"		pane_right		"extra pane left"
bind ftl pane		"_"		pane_down		"extra pane below"
bind ftl pane		"|"		pane_L			"extra pane: left"
bind ftl pane		"-"		pane_go_next		"next pane or viewer"
bind ftl pane		"¬¶"		pane_R			"extra pane: right"
bind ftl shell		"!"		shell_view		"view shell"
bind ftl shell		":"		command_prompt		"run commands: q, etags, load_tags, ..."
bind ftl shell		S		shell_files		"shell pane with selected files"
bind ftl shell		s		shell			"shell pane"
bind ftl shell		"‚ç∞"		shell_zoomed		"shell pane, zoomed out"
bind ftl shell		"‚ç∞"		shell_pop		"shell pane, in popup"
bind ftl shell		X		shell_file		"send selection to shell pane"
bind ftl shell		"${SA[0]}"	shell_synch		"cd to shell pane"
bind ftl tabs		TAB_KEY		tab_next		"next tab"
bind ftl tabs		"${SA[s]}"	tab_new			"new tab"
bind ftl tags		1		tag_1			"class 1 tag"
bind ftl tags		2		tag_2			"class 2 tag"
bind ftl tags		3		tag_3			"class 3 tag"
bind ftl tags		4		tag_4			"class 4 tag"
bind ftl tags		T		tag_fzf_all		"fzf tag files and subdirs"
bind ftl tags		U		tag_untag_fzf		"untag fzf"
bind ftl tags		Y		tag_flip_up		"tag up"
bind ftl tags		t		tag_fzf			"fzf tag files"
bind ftl tags		u		tag_untag_all		"untag all"
bind ftl tags		y		tag_flip_down		"tag down"
bind ftl tags		"${SA[y]}"	tag_all			"tag all files and subdirs"
bind ftl tags		"${A[g]}"	tag_goto		"fzf goto"
bind ftl tags		"${A[o]}"	tag_merge_all		"merge from panes"
bind ftl tags		"${SA[o]}"	tag_merge		"fzf merge from panes"
bind ftl tags		"${A[y]}"	tag_all_files		"tag all files"
bind ftl view		DQUOTE_KEY	preview_image		"show/hide image preview"
bind ftl view		")"		file_dir_mode		"file/dir view mode"
bind ftl view		"+"		preview_size		"change preview size"
bind ftl view		"="		preview_dir_only	"preview directory only"
bind ftl view		M		image_mode		"view mode: file/directory/image"
bind ftl view		O		sort_entries_reversed	"sort reversed"
bind ftl view		V		preview_once		"preview once"
bind ftl view		"^"		show_stat		"show/hide stat"
bind ftl view		o		sort_entries		"sort type"
bind ftl view		v		preview_pane		"preview show/hide"
bind ftl view		"${A[x]}"	hexedit			"hexedit"
bind ftl view		"${SA[i]}"	image_fzf		"fzfi, using ueberzurg"
bind ftl view		"${SA[m]}"	montage_clear		"refresh montage"
bind ftl view		"${SA[t]}"	preview_tail		"file preview at end"
bind ftl view		"${SA[v]}"	preview_m2		"alternative preview for : dir, media, pdf, tar, ..."
bind ftl view		"${A[m]}"	montage_preview		"montage mode"
bind ftl view		"${A[s]}"	show_size		"show/hide size"
bind ftl view		"${A[v]}"	preview_m1		"alternative preview for : dir, media, pdf, tar, ..."
bind ftl view		"‚ç∞"		preview_lock		"preview lock, using external script"
bind ftl view		"‚ç∞"		preview_lock		"preview lock clear"
bind ftl SIG		7		SIG_PANE		"handle pane event"
bind ftl SIG		8		SIG_REFRESH		"preview pane signal"
bind ftl SIG		9		SIG_REMOTE		"handle pane preview"
bind ftl SIG		0		SIG_SYNCH_SHELL		"cd to shell pane"

. $FTL_CFG/etc/bindings/search
. $FTL_CFG/etc/bindings/leader
. $FTL_CFG/etc/bindings/leader_ftl

# vim: set filetype=bash :

