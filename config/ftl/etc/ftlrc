# Directories
pgen="$FTL_CFG/etc/generators" #location of preview generators
ftl_root=$FTL_CFG/var # runtime directory, every session gets a directory here
mkdir -p $ftl_root

ftl_cmds=$ftl_root/cmds # history of shell commands
ghist=$ftl_root/history # global history file
touch $ftl_cmds $ghist

thumbs=$ftl_root/thumbs #where preview generators cache the previews
mkdir -p $thumbs # make sure the directory exists

help_command="man \"$FTL_CFG/man/ftl.1\"" # command to run to show help, see # Vim in man page

# Bookmarks
declare -A marks=([0]=/$ [1]="$HOME/$" [2]=/CHANGE_ME/dir/filename [3]=/CHANGE_ME/dir/filename [$"'"]="$(tail -n1 $ghist)")

# Options 
KEY_TIMEOUT=0.5				# timeout between key presses
shell_h=40%				# shell pane height
auto_selection=1			# automatically synch tags between panes
pdhl=					# log pdh message in file too
: ${prev_all:=1}			# open preview window
zooms=(70 50 30)			# sizes of preview pane in percent
zoom=0					# start zoon level
move_step=4				# fast movement size
msg_m='Creating montage ...'		# message displayed when creating image montage for directories
msg_du='Computing dir sizes ...'	# message displayed when computing directory sizes
find_auto=README			# file to select by default
line_color0="\e[2;40;90m"		# default line color
line_color="$line_color0"		# line color
line_color_hi="\e[38;5;240m"		# line color highlight
mount_archive=0				# set if fuse-archive is installed
cursor_color0='\e[7;34m'		# default cursor color
cursor_color="$cursor_color0"		# cursor color
cursor_color_search='\e[7;35m'		# cursor color in interactive search
quick_display=512			# display entries during scanning if over this number
rfilter0=				# default reverse filter, eg: rfilter0='\.sw.$'
show_line=1				# show line (entry index)
show_size=0				# 0:none, 1: file sizes, 2: file sized + dir entries, 3: file sizes + dir sized recursive
show_date=1				# show date in header if sort mode is by date
show_tar=0				# show extra information about tar file, takes time
tbcolor 67 67				# set tmux separation line color
TBCOLORS='236 52'

# External Tags
etag=0 					# show etags
#. $FTL_CFG/etc/etags/git ; etag=1 # if you want to show git tags by default

sort_type0=0				# default sort. 0: alphanumeric, 1: size, 2: date.
sort_reversed0=				#default reverse sort order

# Glyphs
sglyph=( ⍺ 🡕 )				# sorting: alphanumeric, size
iglyph=('' ᴵ ᴺ)				# image mode: all, no-image, image
lglyph=('' ᵈ ᶠ)				# preview: all, directory-only, file-only
tglyph=('' ¹ ² ³ D)			# tag classes 

# Media Filters
ifilter='svg|webp|jpg|jpeg|JPG|png|gif'	# images
mfilter='mp3|mp4|flv|mkv|webm'		# video

# FZF Options
fzf_opt="-p 90% --cycle --reverse --info=inline --color=hl+:214,hl:214"
fzfp_opt="--cycle --expect=ctrl-t --reverse"

# External Commands
EDITOR=vim
FILE_DIFF=vimdiff

FTLI_CLEAN=1				# set to 0 if using konsole
FTLI_W=10				# hint FTLI about Character width
FTLI_H=19				# hint FTLI about Character height

GPGID=CHANGE.ME

G_PLAYER="vlc -f"			# gui media player
T_PLAYER="mplayer -vo null" 		# terminal media player
T_PLAYER_STATUS='mplayer -msglevel all=-1 -msglevel statusline=6 -nolirc -msgcolor -novideo -vo null' # terminal live preview media player
PREVIEW_SHOW="$FTL_CFG/etc/viewers/cmus"

PAGER_ANSI='/usr/bin/less -R'		# default pager
MD_PAGER='/usr/bin/less -R'		# markdown preview pager, alt: MD_PAGER='moar --no-statusbar -no-linenumbers'
MD_RENDER1='vmd'			# markdown renderer #1, alt: MD_RENDER1='lowdown -Tterm'
MD_RENDER2='vmd'			# markdown renderer #2

HEXEDIT=hexedit				# hex viewer/editor
MIMETYPE=mimemagic			# mimetype generator
NCDU=ncdu 				# ncdu, ncdu2, gdu, tdu, or what you chose as an extended view for directories 

# Deletion command
RM="rm -rf"
	# using rm-improved
	# RM="rip --graveyard '$HOME/graveyard'" ; mkdir -p $HOME/graveyard
	# using FreeDesktop.org Trash 
	# RM="trash-put"
	# using your own delete function
	# my_delete() { echo my_delete ; printf "%s\n" "$@" ; read -sn1 ; }
	# RM=my_delete

CMD_COLS=150 				# columns when displaying command mapping in popup

# Bindings, [07-9] are used by ftl and correspond to SIG_XXX entries below
leader_key='BACKSLASH'

declare -A A=(  [a]=ª [b]=” [c]=© [d]=ð [e]=€ [f]=đ [g]=ŋ [h]=ħ [i]=→ [k]=ĸ [l]=ł [m]=µ [o]=œ [p]=þ [q]='@' [r]=® [s]=ß [t]=þ [u]=↓ [v]=“ [x]=» [y]=← [z]=« ["'"]="´" [.]=·)
declare -A LA=( [ª]=a [”]=b [©]=c [ð]=d [€]=e [đ]=f [ŋ]=g [ħ]=h [→]=i [ĸ]=k [ł]=l [µ]=m [œ]=o [þ]=p ['@']=q [®]=r [ß]=s [þ]=t [↓]=u [“]=v [»]=x [←]=y [«]=z ["´"]="'" [·]='.')
declare -A SA=( [a]=º [b]=’ [c]=© [d]=Ð [e]=¢ [f]=ª [g]=Ŋ [h]=Ħ [i]=ı [k]='&' [l]=Ł [m]=º [o]=Œ [p]=Þ [q]=Ω [r]=® [s]=§ [t]=Þ [u]=↑ [v]=‘ [x]='>' [y]=¥ [z]='<' ["'"]=× [.]=˙ [0]=° [/]=÷)
declare -A LSA=([º]=a [’]=b [©]=c [Ð]=d [¢]=e [ª]=f [Ŋ]=g [Ħ]=h [ı]=i ['&']=k [Ł]=l [º]=m [Œ]=o [Þ]=p [Ω]=q [®]=r [§]=s [Þ]=t [↑]=u [‘]=v ['>']=x [¥]=y ['<']=z [×]="'" [˙]=. [°]=0 [÷]=/)

bind ftl ftl		QUESTION_MARK	ftl_help		"show help"

bind ftl file		I		create_dir		"create new directory, prompts inline"
bind ftl file		P		tag_move		"move selection to current directory"
bind ftl file		R		rename			"rename/bulk rename selection"
bind ftl file		c		copy			"copy file to, prompts inline"
bind ftl file		d		delete_selection	"delete selection using config \$RM"
bind ftl file		i		create_file		"create new file, prompts inline"
bind ftl file		p		tag_copy		"copy selection to current directory"
bind ftl file		"xx"		chmod_x			"chmod a+x selection, flips selection executable bit"
# bind ftl file		"xi"		chmod_dialog		"chmod selection via dialog"

bind ftl file		"${SA[p]}"	tag_move_to		"move to selection to predefine location using fzf_mv"
bind ftl file		"${A[i]}"	create_bulk		"create in files and directories in bulk, uses $EDITOR, lines ending with / will create directories"
bind ftl file		"${A[l]}"	link			"symlink selection in current directory"
bind ftl file		"${SA[l]}"	follow_link		"symlink follow"

bind ftl filter		"#"		preview_ext_ign		"show/hide extension preview"
bind ftl filter		"¤"		extension_hide_tab	"hide extension from listing, per tab"
bind ftl filter		"%"		extension_hide		"hide extension from listing"
bind ftl filter		"&"		extension_clear		"enable all extensions"
bind ftl filter		"."		show_hidden		"show/hide dot-files"
bind ftl filter		F		set_filter2		"set filter 2"
bind ftl filter		f		set_filter		"set filter 1"
bind ftl filter		"${SA[f]}"	set_filter_reverse	"set reverse filter"
bind ftl filter		"${A[.]}"	etag_show		"show/hide etags"
bind ftl filter		"${SA[.]}"	etag_select		"select etag type"
bind ftl filter		"${A[d]}"	clear_filters		"clear filters"
bind ftl filter		"${A[f]}"	set_filter_ext		"select external filter"

bind ftl find		"/"		find_entry		"find"
bind ftl find		N		find_previous		"find previous"
bind ftl find		b		find_fzf		"fzf find current directory file"
bind ftl find		n		find_next		"find next"
bind ftl find		"}"		go_rg			"rg to file"
bind ftl find		"${A[b]}"	find_fzf_all		"fzf find"
bind ftl find		"${SA[b]}"	find_frf		"find file using regexp or fuzzy matching"
bind ftl find		"${SA[/]}"	find_fzf_dirs		"fzf find directories"

bind ftl ftl		"$"		editor_detach		"detach editor preview"
bind ftl ftl		STAR		depth			"maximum listing depth"
bind ftl ftl		q		quit_ftl		"quit"
bind ftl ftl		Q		quit_all		"quit all"
bind ftl ftl		AT		quit_keep_shell		"quit, keep shell"
bind ftl ftl		"${SA[q]}"	quit_keep_preview	"quit, keep preview zoomed"
bind ftl ftl		r		refresh_pane		"refresh"
bind ftl ftl		¿		pdh_pane		"pdh pane"
bind ftl ftl		"${A[c]}"	k_bindings		"show keyboard bindings"
bind ftl ftl		"${A[t]}"	copy_clipboard		"copy selection to clipboard"

bind ftl history	H		history_go		"fzf history current session"
bind ftl history	"¨"		ghistory2		"fzf history all sessions"
bind ftl history	"${SA[d]}"	ghistory_clear		"delete current session history"
bind ftl history	"${SA[h]}"	ghistory_edit		"fzf edit all sessions history"
bind ftl history	"${A[h]}"	ghistory		"fzf history all sessions"

bind ftl marks		QUOTE		mark_go			"go to mark"
bind ftl marks		"${SA["'"]}"	mark_go_tab		"go to mark, new tab"
bind ftl marks		"${A["'"]}"	mark_fzf		"fzf to mark"
bind ftl marks		","		gmark			"add persistent mark"
bind ftl marks		";"		gmark_fzf		"fzf to persistent mark"
bind ftl marks		m		mark			"mark directory/file"
bind ftl marks		"${A[k]}"	gmarks_clear		"clear persistent marks"

bind ftl media		a		player_kill		"kill sound preview"
bind ftl media		e		external_mode1		"external viewer, m1"
bind ftl media		E		external_mode2		"external viewer m2, detached"
bind ftl media		"${A[e]}"	external_mode3		"external viewer m3, detached, fullscreen"
bind ftl media		w		preview_show		"terminal media player in background"
bind ftl media		W		preview_show_fzf	"fzf a viewer"

bind ftl move		ENTER		enter			"enter; cd or open file"
bind ftl move		PGUP		move_page_up		"page down"
bind ftl move		PGDN		move_page_down		"page up"
bind ftl move		UP		move_up_arrow		"up to previous entry"
bind ftl move		DOWN		move_down_arrow		"down to next entry"
bind ftl move		RIGHT		move_right_arrow	"right; cd into directory"
bind ftl move		LEFT		move_left_arrow		"cd to parent directory"
# bind ftl move		J		move_down_step		"move down multiple lines"
# bind ftl move		K		move_up_step		"move up multiple lines"
bind ftl move		J		preview_down		"scroll preview down"
bind ftl move		K		preview_up		"scroll preview up"
bind ftl move		gD		change_dir		"cd"
bind ftl move		"g LEADER"	top_file_bottom		"cycle between top/file/last"
bind ftl move		gd		goto_first_directory	"go to the first directory"
bind ftl move		gg		goto_first_file		"go to the first file"
bind ftl move		gh  		goto_high_file		"position cursor on the first file in the window"
bind ftl move		gl  		goto_low_file		"position cursor on the last file in the window"
bind ftl move		G		goto_last_file		"go to the last file"
bind ftl move		h		move_left		"cd to parent directory"
bind ftl move		j		move_down		"down to next entry"
bind ftl move		k		move_up			"up to previous entry"
bind ftl move		l		move_right		"right; cd into entry"
bind ftl move		ä		goto_entry		"goto entry by index"
bind ftl move		ö		goto_alt1		"next entry of same extension"
bind ftl move		Ö		goto_alt2		"next entry of different extension"
# bind ftl move		not_assigned	goto_prev_tag		"goto previous tag"
# bind ftl move		not_assigned	goto_next_tag		"goto next tag"

bind ftl pane		"CTL-W l"	pane_left		"extra pane right"
bind ftl pane		"CTL-W v"	pane_right		"extra pane left"
bind ftl pane		"CTL-W s"	pane_down		"extra pane below"
bind ftl pane		"CTL-W L"	pane_L			"extra pane: left"
bind ftl pane		"CTL-W V"	pane_R			"extra pane: right"
bind ftl pane		"CTL_W n"	pane_go_next		"next pane or viewer"
bind ftl pane		"gp"		pane_go_next		"next pane or viewer"

bind ftl shell		":"		command_prompt		"run commands: q, etags, load_sel, ..."
bind ftl shell		"CTL-W !"	shell_view		"view shell"
bind ftl shell		"CTL-W SS"	shell_files		"shell pane with selected files"
bind ftl shell		"CTL-W Ss"	shell			"shell pane"
bind ftl shell		"s"		shell			"shell pane"
bind ftl shell		"CTL-W SZ"	shell_zoomed		"shell pane, zoomed out"
bind ftl shell		X		shell_file		"send selection to shell pane"
bind ftl shell		"${SA[0]}"	shell_synch		"cd to shell pane"

bind ftl tabs		TAB		tab_next		"next tab"
bind ftl tabs		gt		tab_next		"next tab"
bind ftl tabs		"${SA[s]}"	tab_new			"new tab"

bind ftl selection	F1		selection_class_1	"class 1 selection"
bind ftl selection	F2		selection_class_2	"class 2 selection"
bind ftl selection	F3		selection_class_3	"class 3 selection"
bind ftl selection	F4		selection_class_4	"class 4 selection"
bind ftl selection	T		selection_fzf_all	"fzf select files and subdirs"
bind ftl selection	U		selection_untag_fzf	"deselect fzf"
bind ftl selection	Y		selection_flip_up	"selection up"
bind ftl selection	t		selection_fzf		"fzf select files"
bind ftl selection	u		selection_untag_all	"deselect all all"
bind ftl selection	y		selection_flip_down	"select down"
bind ftl selection	"${SA[y]}"	select_all		"select all files and subdirs"
bind ftl selection	"${A[g]}"	selection_goto		"fzf goto selection"
bind ftl selection	"${A[o]}"	selection_merge_all	"merge from panes"
bind ftl selection	"${SA[o]}"	selection_merge		"fzf merge from panes"
bind ftl selection	"${A[y]}"	select_all_files	"select all files"

bind ftl view		DQUOTE		preview_image		"show/hide image preview"
bind ftl view		")"		file_dir_mode		"file/dir view mode"
bind ftl view		"+"		preview_size		"change preview size"
bind ftl view		"="		preview_dir_only	"preview directory only"
bind ftl view		M		image_mode		"view mode: file/directory/image"
bind ftl view		O		sort_entries_reversed	"sort reversed"
bind ftl view		V		preview_once		"preview once"
bind ftl view		"^"		show_stat		"show/hide stat"
bind ftl view		o		sort_entries		"sort type"
bind ftl view		v		preview_pane		"preview show/hide"
bind ftl view		"${A[x]}"	hexedit			"hexedit"
bind ftl view		"${SA[i]}"	image_fzf		"fzfi, using ueberzurg"
bind ftl view		"${SA[m]}"	preview_refresh		"refresh file preview/montage"
# bind ftl view		not_assigned	preview_tail		"file preview at end"
bind ftl view		"${A[m]}"	montage_preview		"montage mode"
bind ftl view		"${A[s]}"	show_size		"show/hide size"
bind ftl view		"${A[v]}"	preview_m1		"alternative preview for : dir, media, pdf, tar, ..."
bind ftl view		"${SA[v]}"	preview_m2		"alternative preview for : dir, media, pdf, tar, ..."
# bind ftl view		not_assigned	preview_lock		"preview lock, using external script"
# bind ftl view		not_assigned	preview_lock_clr	"preview lock clear"

# don't change, reserved for *ftl*: [ÅåÄ]
bind ftl SIG		'å'		SIG_PANE		"handle pane event"
bind ftl SIG		'Å'		SIG_REFRESH		"preview pane signal"
bind ftl SIG		'Ä'		SIG_REMOTE		"handle pane preview"
# bind ftl SIG		not assigned		SIG_SYNCH_SHELL		"cd to shell pane"

# Extra Bindings
for b in $(fd  . "$FTL_CFG/etc/bindings" --type f | sort -u) ; do source "$b" ; done
for b in $(fd  . "$FTL_CFG/bindings" --type f | sort -u) ; do source "$b" ; done

# vim: set filetype=bash :

