eviewers()
{
[[ -d "$n" ]]        && { edir   ; return ; }
[[ $e =~ html ]]     && { ehtml  ; return ; }
[[ $e =~ $ifilter ]] && { eimage ; return ; }
[[ $e =~ $mfilter ]] && { emedia ; return ; }
[[ $e == pdf ]]      && { epdf   ; return ; }

mime_get

[[ $e =~ ^json|yml$ || $mtype =~ ^text ]] && [[ -s "$n" ]] && { etext ; return ; }

ewith
}


pviewers()
{
[[ $e ]] && ((pignore["${e@Q}"])) && { pignore    ; return ; }
[[ -e "$fs/lock_preview/$n" ]]    && { plock      ; return ; }
[[ "${pdir_only[tab]}" ]]         && { pdir_only || return ; }

[[ $e == cbr ]]                   && { pcbr       ; return ; }
[[ $e == cbz ]]                   && { pcbz       ; return ; }
[[ $e == html ]]                  && { phtml      ; return ; }
[[ $e == svg ]]                   && { psvg       ; return ; }
[[ $e =~ $ifilter ]]              && { pimage     ; return ; }
[[ $e == mp3 ]]                   && { pmp3       ; return ; }
[[ $e =~ mkv|mp4|flv ]]           && { pmp4       ; return ; }
[[ $e =~ ^md|MD$ ]]               && { pmd        ; return ; }
[[ $e == pdf ]]                   && { ppdf       ; return ; }
[[ $e == zip ]]   && ((extmode))  && { pcomp      ; return ; }
[[ $e == rar ]]   && ((extmode))  && { pcomp      ; return ; }
[[ $f =~ \.tar ]] && ((extmode))  && { pcomp      ; return ; }
[[ $e =~ ^json|yml$ ]]            && { ptext      ; return ; }
[[ -d "$n" ]]                     && { pdir       ; return ; }

mime_get ; is_bin "$n"

((! is_bin)) && [[ -s "$n" ]] && \
	[[ $mtype =~ ^text || $mtype == 'application/x-shellscript' || $mtype == application/x-perl ]] && \
	{ ptext && return ; }

ptype
}

edir()      {  $G_PLAYER "$n" &>/dev/null & }
ehtml()     { ((emode == 1)) && { tcpreview ; w3m -o confirm_qq=0 "$n" ; } || { (qutebrowser "$n" 2>&- &) ; } ; }
eimage()    { run_maxed fim -a "$n" "$PWD" ; }
emedia()    { ((emode == 1)) && { player_k ; $T_PLAYER "$n" </dev/null &>/dev/null & } || ($G_PLAYER "$n" &>/dev/null &) ; player=$! ; }
epdf()      { ((emode == 1)) && epdf_vi || { ((emode == 2)) && (mupdf "$n" 2>/dev/null &) && true ; } || { ((emode == 3)) && run_maxed mupdf "$n" ; } ; }
epdf_vi()   { t="$thumbs/pdf/${f}1.txt" ; [[ -e $t ]] || $pgen/pdf "$f" $thumbs/pdf 1 && edit "$t" ; }
etext()     { tcpreview ; tsplit "$EDITOR ${n@Q}" "33%" '-h -b' -R ; pane_id= ; }

pignore()   { in_pdir= ; in_viprev= ; ptype ; }
plock()     { vipreview "$fs/lock_preview/$n" ; }
ptype()     { ctsplit "echo ${f@Q} ; echo '$mtype' ; file -b ${n@Q} ; stat -c %s ${n@Q} | numfmt --to=iec ; read -sn 100" ; }

pcbr()      { t="$thumbs/cbr/$f.jpg" ; [[ -e $t ]] || $pgen/cbr "$f" "$thumbs/cbr" ; pw3image "$t" ; }
pcbz()      { t="$thumbs/cbz/$f.jpg" ; [[ -e $t ]] || $pgen/cbz "$f" "$thumbs/cbz" ; pw3image "$t" ; }

pdir()      { ((extmode)) && pdir_du || { [[ "$montage" ]] && pdir_image || { echo "${ofs:-$fs}" >$fsp/fs ; pdir_dir ; } ; } ; } || { in_pdir= ; pdir_only ; }
pdir_dir()  { ((in_pdir)) && [[ $pane_id ]] && tmux send -t $pane_id ${C[SIG_REFRESH]} || { tmux selectp -t $my_pane ; ctsplit "ftl ${n@Q} $pfs 1" ; in_pdir=1 ; } ; true ; }
pdir_du()   { ctsplit "$NCDU \"$n\" ; read -sn 1000" ; true ; }
pdir_image(){ in_pdir= ; m="$ftl_root/montage/$n/montage.jpg" ; [[ -e "$m" ]] || { header '' "$msg_m" ; "$pgen/montage" "$ftl_root" "$n" ; header '' "$head" ; } ; pw3image "$m" ; true ; }

pdir_only() { [[ -d "$n" ]] || { tcpreview ; false ; } ; }

phtml()     { t="$thumbs/html/$f.txt" ; [[ -e $t ]] || $pgen/html "$f" "$thumbs/html" ; vipreview "$t" ; }
pimage()    { ((extmode)) && { ctsplit "identify -format 'type: %m\nsize: %wx%h\nbits: %q\ndisk: %b\n' ${n@Q} ; read -sn1" ; geo_winch ; } || pw3image "$n" ; }
psvg()      { t="$thumbs/svg/$f.jpg" ; [[ -e $t ]] || $pgen/svg "$f" "$thumbs/svg" ; pw3image "$t" ; }
pmp3()      { pmlive || { ctsplit "$PAGER_ANSI <$(gen_exift) ; read -sn1" ; } ; }
pmp4()      { pmlive || { t="$thumbs/$e/$f.jpg" ; [[ -f "$t" ]] || $pgen/$e "$f" "$thumbs/$e"; pw3image "$t" ; } ; }
pmlive()    { ((extmode)) && { player_k ; ctsplit "cat $(gen_exift) ; $T_PLAYER_STATUS ${n@Q}" ; true ; } ; }

pmd()       { ((extmode)) && ctsplit "$MD_RENDER2 \"$n\" | $MD_PAGER" || ctsplit "$MD_RENDER1 \"$n\" | $MD_PAGER" ;  }
ptext()     { vipreview "$n" ; }

ppdf()      { [[ $e == pdf ]] && { ((extmode==2)) && ppdfpng || { t="$thumbs/pdf/$f$extmode.txt" ; [[ -e $t ]] || $pgen/pdf "$f" $thumbs/pdf $extmode && vipreview "$t" ; } ; true ; } ; }
ppdfpng()   { t="$thumbs/$e/et_$(head -c50000 "$n" | md5sum | cut -f1 -d' ').png" ; [[ -f "$t" ]] || { mutool draw -o "$t" "$n" 1 2>/dev/null ; } ; pw3image "$t" ; true ; }

pcomp()     { [[ $e == zip ]] && _pcomp unzip -l || { [[ $e == rar ]] && _pcomp unrar list ; } || { [[ $f =~ \.tar ]] && _pcomp tar --list --verbose -f ; } ; }
_pcomp()    { ((extmode)) && { fp="$fs/$f.txt" ; [[ -e "$fp" ]] || timeout 1 "$@" "$f" >"$fp" ; vipreview "$fp" ; } ; }

# vim: set filetype=bash :
