
declare -A A=(  [a]=ª [b]=” [c]=© [d]=ð [e]=€ [f]=đ [g]=ŋ [h]=ħ [i]=→ [k]=ĸ [l]=ł [m]=µ [o]=œ [p]=þ [q]='@' [r]=® [s]=ß [t]=þ [u]=↓ [v]=“ [x]=» [y]=← [z]=« ["'"]="´" [.]=·)
declare -A LA=( [ª]=a [”]=b [©]=c [ð]=d [€]=e [đ]=f [ŋ]=g [ħ]=h [→]=i [ĸ]=k [ł]=l [µ]=m [œ]=o [þ]=p ['@']=q [®]=r [ß]=s [þ]=t [↓]=u [“]=v [»]=x [←]=y [«]=z ["´"]="'" [·]='.')
declare -A SA=( [a]=º [b]=’ [c]=© [d]=Ð [e]=¢ [f]=ª [g]=Ŋ [h]=Ħ [i]=ı [k]='&' [l]=Ł [m]=º [o]=Œ [p]=Þ [q]=Ω [r]=® [s]=§ [t]=Þ [u]=↑ [v]=‘ [x]='>' [y]=¥ [z]='<' ["'"]=× [.]=˙ [0]=° [/]=÷)
declare -A LSA=([º]=a [’]=b [©]=c [Ð]=d [¢]=e [ª]=f [Ŋ]=g [Ħ]=h [ı]=i ['&']=k [Ł]=l [º]=m [Œ]=o [Þ]=p [Ω]=q [®]=r [§]=s [Þ]=t [↑]=u [‘]=v ['>']=x [¥]=y ['<']=z [×]="'" [˙]=. [°]=0 [÷]=/)

bind()
{
local map="$1" section="$2" keys="$3" command="$4" help="$5" shortcut= dscut=
local keysa=( $keys )

for key in "${keysa[@]}"
	do
		shortcut="$shortcut$key" 
		
		((ftl_bind_check)) && [[ "${kbd_trie[$shortcut]}" =~ [[:alpha:]] ]] && \
			echo "ftl: bind: map: $map, section: $section, keys:'$keys', command: '$command' is overriding '${kbd_trie[$shortcut]}'" 
		
		((kbd_trie[$shortcut]++)) 
		{ [[ -n "${LA[$key]}"  ]] && dscut="$dscut ⇑${LA[$key]}/$key" ; } || { [[ -n "${LSA[$key]}" ]] && dscut="$dscut ⇈${LSA[$key]}/$key" ; } || dscut="$dscut $key"
	done

((ftl_bind_check && ${kbd_trie[$shortcut]} > 1)) && echo "ftl: bind: map: $map, section: $section, keys:'$keys', command: '$command' is overriding command path" 
C[$command]="$shortcut" ; kbd_trie[$shortcut]="$command" ; bindings[$dscut]="$map	$section	$dscut	$command	$help"
}

reset_exclude_command_from_redo() { declare -g -A exclude_from_redo=() ; }
exclude_command_from_redo() { exclude_from_redo[$1]=1 ; }

reset_exclude_command_from_redo

exclude_command_from_redo "move_up"
exclude_command_from_redo "move_up_arrow"
exclude_command_from_redo "move_down"
exclude_command_from_redo "move_down_arrow"
exclude_command_from_redo "move_left"
exclude_command_from_redo "move_left_arrow"
exclude_command_from_redo "move_right"
exclude_command_from_redo "move_right_arrow"

key_command()
{
(( keys_in > 3 ))               && { keys_in= keys_command= HAS_COUNT= COUNT= ; return ; } # OVERFLOW
[[ "$REPLY" == ERROR_142     ]] && { keys_in= keys_command= HAS_COUNT= COUNT= ; return ; } # TIMEOUT
[[ "$REPLY" == "?"           ]] && REPLY=QUESTION_MARK
[[ "$REPLY" == "$leader_key" ]] && REPLY=LEADER 

[[ -n "$key_map"             ]] && { $key_map ; return ; }
[[ "$REPLY" == ESCAPE ]]        && { keys_in= keys_command= HAS_COUNT= COUNT= ; return ; } # INTERRUPTED

[[ -z "$keys_command" || "$keys_command" =~ ^[0-9]$ ]] && [[ "$REPLY" =~ ^[0-9]$ ]] && { [[ "$COUNT$REPLY" != 0 ]] && { HAS_COUNT=COUNT ; COUNT="$COUNT$REPLY" ; } ; return ; }

keys_command="$keys_command$REPLY" ; (( keys_in++)) #; pdhn "[$COUNT] <$keys_command> ($keys_in) -> ${kbd_trie[$HAS_COUNT$keys_command]}"

((${#vfiles[@]} || ${#vdirs[@]})) && { vfile_key "$keys_command" && return ; } 

[[ $(type -t "${kbd_trie[$HAS_COUNT$keys_command]}") == function ]] && 
	{
	setup_finfo "$ftl_main_info_file"
	
	keys_function=${kbd_trie[$HAS_COUNT$keys_command]}
	$keys_function
	
	[[ "${exclude_from_redo[$keys_function]}" ]] || keys_latest_command="$keys_function"
	
	keys_in= keys_command= HAS_COUNT= COUNT= REPLY=
	}

[[ "$HAS_COUNT$keys_command" == "$redo_key" && "$keys_latest_command" ]] &&
	{
	$keys_latest_command
	keys_in= keys_command= HAS_COUNT= COUNT= REPLY=
	}
}

get_key()
{
OIFS="$IFS" ; IFS=

[[ "$1" ]] && {  read -rsn 1 -t "$1" || REPLY=ERROR_$? ; } || { read -rsn 1 || REPLY=ERROR_$? ; } ; OREPLY="$REPLY"

read -rsn 4 -t 0.002 E1 E2 E3 E4

case "$REPLY$E1$E2$E3$E4" in 
	$'\e'                           ) REPLY=ESCAPE ;;
	$'\177'                         ) REPLY=BACKSPACE ;;
	$'\\'                           ) REPLY=BACKSLASH ;;
	$' '                            ) REPLY=SPACE ;;
	$'*'                            ) REPLY=STAR ;;
	$'@'                            ) REPLY=AT ;;
	$"'"                            ) REPLY=QUOTE ;;
	$'"'                            ) REPLY=DQUOTE ;;
	$'\t'                           ) REPLY=TAB ;;
	$''                             ) REPLY=ENTER ;;

	$'\e[A' | $'\e[OA' | $'\e[A\e[' ) REPLY=UP ;;
	$'\e[B' | $'\e[0B' | $'\e[B\e[' ) REPLY=DOWN ;;
	$'\e[C' | $'\e[OC' | $'\e[C\e[' ) REPLY=RIGHT ;;
	$'\e[D' | $'\e[OD' | $'\e[D\e[' ) REPLY=LEFT ;;

	$'\e[2~'                        ) REPLY=INS ;;
	$'\e[3~'                        ) REPLY=DEL ;;
	$'\e[1~' | $'\e[H'              ) REPLY=HOME ;;
	$'\e[4~' | $'\e[F'              ) REPLY=END ;;
	$'\e[5~'                        ) REPLY=PGUP ;;
	$'\e[6~'                        ) REPLY=PGDN ;;

	$'\e[11~' | $'\e[[A' | $'\eOP'  ) REPLY=F1 ;;
	$'\e[12~' | $'\e[[B' | $'\eOQ'  ) REPLY=F2 ;;
	$'\e[13~' | $'\e[[C' | $'\eOR'  ) REPLY=F3 ;;
	$'\e[14~' | $'\e[[D' | $'\eOS'  ) REPLY=F4 ;;
	$'\e['15~ | $'\e[[E'            ) REPLY=F5 ;;
	$'\e['17~ | $'\e[[F'            ) REPLY=F6 ;;
	$'\e['18~                       ) REPLY=F7 ;;
	$'\e['19~                       ) REPLY=F8 ;;
	$'\e['20~                       ) REPLY=F9 ;;
	$'\e['21~                       ) REPLY=F10 ;;
	$'\e['23~                       ) REPLY=F11 ;;
	$'\e['24~                       ) REPLY=F12 ;;
	# more F keys
	# https://aperiodic.net/phil/archives/Geekery/term-function-keys/

	$'\001'                         ) REPLY=CTL-A ;;
	$'\002'                         ) REPLY=CTL-B ;;
	#$'\0??'                        ) REPLY=CTL-C ;;
	$'\004'                         ) REPLY=CTL-D ;;
	$'\005'                         ) REPLY=CTL-E ;;
	$'\006'                         ) REPLY=CTL-F ;;
	$'\a'                           ) REPLY=CTL-G ;;
	$'\b'                           ) REPLY=CTL-H ;;
	#$'\0??'                        ) REPLY=CTL-I ;;
	#$'\0??'                        ) REPLY=CTL-J ;;
	$'\v'                           ) REPLY=CTL-K ;;
	$'\f'                           ) REPLY=CTL-L ;;
	#$'\0??'                        ) REPLY=CTL-M ;;
	$'\016'                         ) REPLY=CTL-N ;;
	$'\017'                         ) REPLY=CTL-O ;;
	$'\020'                         ) REPLY=CTL-P ;;
	$'\021'                         ) REPLY=CTL-Q ;;
	$'\022'                         ) REPLY=CTL-R ;;
	$'\023'                         ) REPLY=CTL-S ;;
	$'\024'                         ) REPLY=CTL-T ;;
	$'\025'                         ) REPLY=CTL-U ;;
	$'\026'                         ) REPLY=CTL-V ;;
	$'\027'                         ) REPLY=CTL-W ;;
	$'\030'                         ) REPLY=CTL-X ;;
	$'\031'                         ) REPLY=CTL-Y ;;
	#$'\0??'                        ) REPLY=CTL-Z ;;
esac

# [[ "$2" ]] && printf "%-10s < %-5q | %-5q | %-5q | %-5q | %-5q >\n" "$REPLY" "${OREPLY}" "$E1" "$E2" "$E3" "$E4"
# pdhn "$(printf "%-10s < %-5q | %-5q | %-5q | %-5q | %-5q >\n" "$REPLY" "${OREPLY}" "$E1" "$E2" "$E3" "$E4")"

IFS="$OIFS"
}


# vim: set filetype=bash :
