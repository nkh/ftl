ext_bindings()
{
# handle leader + user defined shortcut
((leader_command)) && { leader_command ; return ; }

# incremental search
((incremental_search)) && case "${REPLY: -1}" in 
	'') incremental_search=0 ; cursor_color='\e[7;34m' ; REPLY="${C[refresh]}" ;;
	 *) to_search="$to_search$REPLY" ; REPLY="${C[find_next]}"
esac && return 1

case "${REPLY: -1}" in
	' '        ) leader_command=1 ;;
	${C[find]} ) to_search= ; incremental_search=1 ; cursor_color='\e[7;35m' ; list ;;
	*          ) false ;;
esac
}


leader_command()
{
leader_command=

case "${REPLY: -1}" in
	c  ) [[ $f =~ \.tar ]] && tar -xf "$f" || { prompt 'tar.bz2 file: ' -e ; [[ -n $REPLY ]] && tar -cvjSf $REPLY.tar.bz2 "${selection[@]}" ; } ; tags=() ; cdir '' "$REPLY" ;;
	i  ) image_optimize ;;
	m  ) mutt $([[ ${#selection[@]} ]] && printf "\055a %s\n" "${selection[@]}" || [[ $f ]] && echo "-a $f") -s 'ftl files' -- ; refresh ; list ;;
	s  ) tcpreview && tsplit "{ stat '$n' ; echo '  mime: $mtype' ; echo -n '  type: ' ; file -b ${n@Q} ;} | piper --global '\w+: ' 'blue' '\d+\ ?x\ ?\d+' 'yellow' ; read -sn1" ;;
	t  ) R="MM)" ;;
	x  ) [[ $e =~ gpg ]] && tmux popup -h90% -w90% "gpg -d $n" || gpg -e -u "$GPGID" -r "$(gpg -K | grep uid | cut -d' ' -f 13- | fzf)" "$f" || read -sn1 ; cdir '' "$f.gpg" ;;
	z  ) [[ $e =~ gpg ]] && prompt 'file: ' -e && [[ -n "$REPLY" ]] && gpg -d "$n" > "$REPLY" || gpg --output "$f.gpg" --symmetric "$f" || read -sn1 ; cdir '' "$REPLY" ;;
	*  ) tmux popup "echo -n ftl: unknown leader command '$REPLY'" ;;
esac
}

image_optimize()
{
[[ $e == jpg ]] && { cp "$f" "$b.original.$e" ; jpegoptim --size=50% "$f" ; cdir '' "$f" ; }
[[ $e == png ]] && { mv "$f" "$b.original.$e" ; convert "$b.original.$e" -quality 90% "$b.jpg" ; cdir '' "$b.jpg" ; }
true
}

shell_command()
{
[[ "$1" =~ ^[0-9]+$ ]] && { list $(($1 - 1)) ; return 1 ; }

[[ "$1" =~ ^etags ]] && \
	{
	p=~/.config/ftl/external_tags ; etags_file="${1#etags}"

	[[ "$etags_file" ]] && \
		{ . $p/$etags_file $fs ; etag=1 ; cdir ; } || \
		{ etags_file=$(cd $p ; fd | fzf-tmux -p 80% --reverse --info=inline) ; [[ $file ]] && { . $p/$etags_file $fs ; etag=1 ; cdir ; } ; }

	return
	}

[[ "$1" == "load_tags" ]] && \
	{
	# eg: select all files in a directory: fd -a . > $ftl_root/load_tags 
	[[ -s "$fs/load_tags" ]] \
		&& { <"$fs/load_tags" readarray -t new_tags && tags=() && for p in "${new_tags[@]}" ; do tags["$p"]='â–ª' ; done ; } \
		|| tmux popup "echo -n ftl: no such file '$fs/load_tags'"

	return
	}


# handle partial command names, if single match
#	${C[quit]} ) R=${C[quit]} ;;

case "${1: -1}" in
	*          ) R=${C[$1]} ;; 
esac
}

# vim: set filetype=sh :
