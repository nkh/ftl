# Current

functionality: give commands to be executed after start
		source them ala ftlrc
			user's ftlrc can implement that

		which options and how to do pass them to sub process?
			env variables
			commands running in another process
				ftl -c <(command option option)

functionality: shortcut to start ftl in the current pane
	always in cd mode

functionality: pane splitting
		what do we want?
			split the current pane
			keep focus or pass to new split
			split on the other side of the preview

# Later

functionality: make command out of fzf-ftl previewer

functionality: grep in binary files https://github.com/phiresky/ripgrep-all
		asciio files are compressed can we grep in them?
		
		only interesting if we're going to select and filter them
		it's probably better to let user generate a selection/filter list
		and instead for adding it to ftl, let the user handle it

functionality: drag drop via dragon, what's the use case?

arch: multi column attributes
	have a column for entry number, size, etags, access attribute, time, file name, ...
	
	user can add and remove, except file
	user can sort per one or more of the columns 
	user can chose which column is displayed and where
	
	columns can be added by background process
		eg: many files need processing and take a long time
			list every time a batch is processed

arch: asynch list display for very large directories
	process1: generate list in background process (filter, color, ...)
	process2: keep the list in memory
	ftl:      query from process2

	optimizations:
		once a directory is processed, setting inotify on it let's us
		update the list and avoid generating the list again
	
	note that ftl already runs process1 in the background 

arch: put all options in one array
	to simplify handling it

arch: let hidden pane do preview so main pane data isn't overridden by extra pane's
	this may also make it possible to use fz, rg, etc... as filters and ftl as preview

